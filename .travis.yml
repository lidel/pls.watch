language: node_js
node_js:
    - "0.12"
sudo: false
env:
    global:
        - DISPLAY=':99.0'
        - FIREFOX_BIN='./firefox/firefox'
        - BINPATH=./browsers/bin
        - PATH=./node_modules/.bin:${BINPATH}:${PATH}
    matrix:
        - NIGHTWATCH_TARGET=phantomjs
        - NIGHTWATCH_TARGET=chrome  BROWSER=chrome  BVER=stable
        - NIGHTWATCH_TARGET=firefox BROWSER=firefox BVER=stable
matrix:
    fast_finish: true
    allow_failures:
        - env: NIGHTWATCH_TARGET=chrome  BROWSER=chrome  BVER=stable
        - env: NIGHTWATCH_TARGET=firefox BROWSER=firefox BVER=stable
addons:
    hosts:
        - yt.127.0.0.1.xip.io
    apt:
        packages:
            - python-pip
cache:
    directories:
        - $HOME/node_modules/selenium-standalone/.selenium/selenium-server
install:
    # devDependencies from package.json
    - npm install
    - npm run selenium-download
    - test "$NIGHTWATCH_TARGET" = "phantomjs" || (text -x ${BINPATH}/${BROWSER}-${BVER} || ./node_modules/travis-multirunner/setup.sh )
before_script:
    - npm run httpd &
    # start xvfb for non-phantomjs tests
    - test "$NIGHTWATCH_TARGET" = "phantomjs" || /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1920x1080x16
script:
    - grunt qunit --verbose
    - grunt nightwatch:${NIGHTWATCH_TARGET}
    - grunt eslint
after_failure:
    - ls -la test/
    - ls -la test/screenshots
    - bash test/upload_screenshots.sh

#- test "$NIGHTWATCH_TARGET" != "firefox" || pip install --user mozdownload
#- test "$NIGHTWATCH_TARGET" != "firefox" || $HOME/.local/bin/mozdownload -t release -v $FIREFOX_VERSION
#- test "$NIGHTWATCH_TARGET" != "firefox" || tar xf *firefox*.tar.*
#- test "$CHROME_VERSION" != "canary" || (export CHROME_REV=$(curl -s ${CHROME_URL}/LAST_CHANGE) && curl -# ${CHROME_URL}/${CHROME_REV}/chrome-linux.zip -o chrome-linux.zip && unzip chrome-linux.zip)
